#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build-Images-Push-Docker
env:
  IMAGE_LAKE: ${{ secrets.DOCKERHUB_OWNER }}/devlake
  IMAGE_CONFIG_UI: ${{ secrets.DOCKERHUB_OWNER }}/devlake-config-ui
  IMAGE_GRAFANA: ${{ secrets.DOCKERHUB_OWNER }}/devlake-dashboard
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USER }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
on:
  push:
    tags:
      - 'v*'
jobs:
  build-lake:
    name: Build and Push lake image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache Build-Images-Push-Docker
        id: cache-Build-Images-Push-Docker
        uses: actions/cache@v3
        with:
          path: Build-Images-Push-Docker
          key: ${{ runner.os }}-Build-Images-Push-Docker

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build lake image
        run: |
          docker build --build-arg TAG=${{ github.ref_name }} --build-arg SHA=${{ github.sha }} -t ${{ env.IMAGE_LAKE }}:latest --file ./Dockerfile .
          docker tag ${{ env.IMAGE_LAKE }}:latest ${{ env.IMAGE_LAKE }}:${{ github.ref_name }}
          docker push ${{ env.IMAGE_LAKE }}:${{ github.ref_name }}
          if printf ${{ github.ref_name }} | grep -Pq '^v(\d+).(\d+).(\d+)$'; then
            echo "push latest tag"
            docker push ${{ env.IMAGE_LAKE }}:latest
          fi
  build-configui:
    name: Build and Push config-ui image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache config-ui
        id: cache-config-ui
        uses: actions/cache@v3
        with:
          path: config-ui
          key: ${{ runner.os }}-config-ui
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build config ui image
        run: |
          cd config-ui
          docker build -t ${{ env.IMAGE_CONFIG_UI }}:latest --file ./Dockerfile .
          docker tag ${{ env.IMAGE_CONFIG_UI }}:latest ${{ env.IMAGE_CONFIG_UI }}:${{ github.ref_name }}
          docker push ${{ env.IMAGE_CONFIG_UI }}:${{ github.ref_name }}
          if printf ${{ github.ref_name }} | grep -Pq '^v(\d+).(\d+).(\d+)$'; then
            docker push ${{ env.IMAGE_CONFIG_UI }}:latest
          fi
  build-grafana:
    name: Build and Push grafana image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache grafana
        id: cache-grafana
        uses: actions/cache@v3
        with:
          path: grafana
          key: ${{ runner.os }}-grafana
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build grafana
        run: |
          cd grafana
          docker build -t ${{ env.IMAGE_GRAFANA }}:latest --file ./Dockerfile .
          docker tag ${{ env.IMAGE_GRAFANA }}:latest ${{ env.IMAGE_GRAFANA }}:${{ github.ref_name }}
          docker push ${{ env.IMAGE_GRAFANA }}:${{ github.ref_name }}
          if printf ${{ github.ref_name }} | grep -Pq '^v(\d+).(\d+).(\d+)$'; then
            docker push ${{ env.IMAGE_GRAFANA }}:latest
          fi
