FROM mericodev/lake-builder:0.0.4 as builder

# docker build --build-arg GOPROXY=https://goproxy.io,direct -t mericodev/lake .
ARG GOPROXY=
# docker build --build-arg HTTPS_PROXY=http://localhost:4780 -t mericodev/lake .
ARG HTTP_PROXY=
ARG HTTPS_PROXY=

# install dlv
RUN \
    apk add build-base &&\
    go install github.com/go-delve/delve/cmd/dlv@latest;

WORKDIR /app
COPY . /app
ENV GOBIN=/app/bin

ARG VERSION=DEBUG

RUN make -f Makefile.keon all

FROM --platform=linux/amd64 alpine:3.15
RUN \
    apk add --no-cache musl-dev libgit2-dev libffi-dev &&\
    apk add --no-cache gcc

ENV PYTHONUNBUFFERED=1
RUN apk add --update --no-cache python3-dev && ln -sf python3 /usr/bin/python
RUN python3 -m ensurepip
RUN pip3 install --no-cache --upgrade pip setuptools
RUN pip3 install dbt-mysql
RUN apk add --no-cache tar

EXPOSE 8080

WORKDIR /app

# go runtime binaries
COPY --from=builder /go/bin/dlv /go/bin/dlv
COPY --from=builder /app/bin /app/bin
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo

ENV PATH="/app/bin:${PATH}"

CMD ["lake"]

# Notes: Docker for Mac(M1) sets up qemu emulation, you can try to use the amd64 image by adding the --platform=linux/amd64 flag.
# Such as: FROM --platform=linux/amd64 alpine:3.15
